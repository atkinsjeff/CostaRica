inv <- fd_inventory()
head(inv)
ggplot(inv, aes(x = dbh_cm, fill = as.factor(species))) +
geom_density(alpha = 0.25)
require(ggridges)
require(viridis)
x11()
ggplot(inv, aes(x = dbh_cm, y = species, fill = species)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_discrete(expand = expand_scale(mult = c(0.01, 0.25))) +
scale_fill_viridis_c(option = "C") +
labs(
title = 'Temperatures in Lincoln NE',
subtitle = 'Mean temperatures (Fahrenheit) by month for 2016'
) +
theme_ridges(font_size = 13, grid = TRUE) +
theme(axis.title.y = element_blank())
x11()
ggplot(inv, aes(x = dbh_cm, y = species, fill = species)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_discrete(expand = expand_scale(mult = c(0.01, 0.25))) +
scale_fill_viridis_c(option = "C", discrete = TRUE) +
labs(
title = 'Temperatures in Lincoln NE',
subtitle = 'Mean temperatures (Fahrenheit) by month for 2016'
) +
theme_ridges(font_size = 13, grid = TRUE) +
theme(axis.title.y = element_blank())
x11()
ggplot(inv, aes(x = dbh_cm, y = species, fill = as.factor(species))) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_discrete(expand = expand_scale(mult = c(0.01, 0.25))) +
scale_fill_viridis_c(option = "C", discrete = TRUE) +
labs(
title = 'Temperatures in Lincoln NE',
subtitle = 'Mean temperatures (Fahrenheit) by month for 2016'
) +
theme_ridges(font_size = 13, grid = TRUE) +
theme(axis.title.y = element_blank())
x11()
ggplot(inv, aes(x = dbh_cm, y = species, fill = as.factor(species))) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_discrete(expand = expand_scale(mult = c(0.01, 0.25))) +
scale_fill_viridis(option = "C", discrete = TRUE) +
labs(
title = 'Temperatures in Lincoln NE',
subtitle = 'Mean temperatures (Fahrenheit) by month for 2016'
) +
theme_ridges(font_size = 13, grid = TRUE) +
theme(axis.title.y = element_blank())
x11()
ggplot(inv, aes(x = dbh_cm, y = species, fill = as.factor(species))) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_discrete(expand = expand_scale(mult = c(0.01, 0.25))) +
scale_fill_viridis(option = "C", discrete = TRUE, name = "Species Codes") +
labs(
title = 'FoRTE Inventory Data',
subtitle = 'DBH Size [cm] by Species Code') +
theme_ridges(font_size = 13, grid = TRUE) +
theme(axis.title.y = element_blank())
x11()
ggplot(inv, aes(x = dbh_cm, y = species, fill = as.factor(species))) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_discrete(expand = expand_scale(mult = c(0.01, 0.25))) +
scale_fill_viridis(option = "D", discrete = TRUE, name = "Species Codes") +
labs(
title = 'FoRTE Inventory Data',
subtitle = 'DBH Size [cm] by Species Code')+
xlab("DBH [cm]")+
theme_ridges(font_size = 13, grid = TRUE) +
theme(axis.title.y = element_blank())
mor <- fd_mortality()
head(mor)
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 100) +
labs(
x = "Vote (%)",
y = "Election Year",
title = "Indy vs Unionist vote in Catalan elections",
subtitle = "Analysis unit: municipalities (n = 949)",
caption = "Marc Belzunces (@marcbeldata) | Source: Idescat"
)
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 100) +
labs(
x = "Vote (%)",
y = "Election Year",
title = "Indy vs Unionist vote in Catalan elections",
subtitle = "Analysis unit: municipalities (n = 949)",
caption = "Marc Belzunces (@marcbeldata) | Source: Idescat"
) +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_cyclical(
breaks = c("1980 Indy", "1980 Unionist"),
labels = c(`1980 Indy` = "Indy", `1980 Unionist` = "Unionist"),
values = c("#ff0000", "#0000ff", "#ff8080", "#8080ff"),
name = "Option", guide = "legend"
) +
coord_cartesian(clip = "off") +
theme_ridges(grid = FALSE)
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 100) +
labs(
x = "DBH [cm]",
y = "Election Year",
title = "Indy vs Unionist vote in Catalan elections",
subtitle = "Analysis unit: municipalities (n = 949)",
caption = "Marc Belzunces (@marcbeldata) | Source: Idescat"
) +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_cyclical(
breaks = c("1980 Indy", "1980 Unionist"),
labels = c(`1980 Indy` = "Indy", `1980 Unionist` = "Unionist"),
values = c("#ff0000", "#0000ff", "#ff8080", "#8080ff"),
name = "Option", guide = "legend"
) +
coord_cartesian(clip = "off") +
theme_ridges(grid = FALSE)
table(mor$fate)
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 100) +
labs(
x = "DBH [cm]",
y = "Species Code",
title = "FoRTE Mortality Comparison",
subtitle = "",
caption = "")) +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_cyclical(
breaks = c("kill", "live"),
labels = c(`Girdled` = "kill", `Living` = "live"),
values = c("#ff0000", "#0000ff", "#ff8080", "#8080ff"),
name = "Option", guide = "legend"
) +
coord_cartesian(clip = "off") +
theme_ridges(grid = FALSE)
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 100) +
labs(
x = "DBH [cm]",
y = "Species Code",
title = "FoRTE Mortality Comparison",
subtitle = "",
caption = "")) +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_cyclical(
breaks = c("TCSA kill", "TSCA live"),
labels = c(`Girdled` = "kill", `Living` = "live"),
values = c("#ff0000", "#0000ff", "#ff8080", "#8080ff"),
name = "Option", guide = "legend"
) +
coord_cartesian(clip = "off") +
theme_ridges(grid = FALSE)
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 100) +
labs(
x = "DBH [cm]",
y = "Species Code",
title = "FoRTE Mortality Comparison",
subtitle = "",
caption = "")) +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_cyclical(
breaks = c("TSCA kill", "TSCA live"),
labels = c(`Girdled` = "kill", `Living` = "live"),
values = c("#ff0000", "#0000ff", "#ff8080", "#8080ff"),
name = "Option", guide = "legend"
) +
coord_cartesian(clip = "off") +
theme_ridges(grid = FALSE)
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 100) +
labs(
x = "DBH [cm]",
y = "Species Code",
title = "FoRTE Mortality Comparison",
subtitle = "",
caption = "")) +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0))
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 100) +
labs(
x = "DBH [cm]",
y = "Species Code",
title = "FoRTE Mortality Comparison")) +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_cyclical(
breaks = c("TSCA kill", "TSCA live"),
labels = c(`Girdled` = "kill", `Living` = "live"),
values = c("#ff0000", "#0000ff", "#ff8080", "#8080ff"),
name = "Option", guide = "legend"
) +
coord_cartesian(clip = "off") +
theme_ridges(grid = FALSE)
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 100) +
labs(
x = "DBH [cm]",
y = "Species Code",
title = "FoRTE Mortality Comparison")) +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0))
x11()
ggplot(mor, aes(y = as.factor(species)))
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 100) +
# labs(
#     x = "DBH [cm]",
#     y = "Species Code",
#     title = "FoRTE Mortality Comparison")) +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0))
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 100) +
labs(
x = "DBH [cm]",
y = "Species Code",
title = "FoRTE Mortality Comparison") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_cyclical(
breaks = c("TSCA kill", "TSCA live"),
labels = c(`Girdled` = "kill", `Living` = "live"),
values = c("#ff0000", "#0000ff", "#ff8080", "#8080ff"),
name = "Option", guide = "legend"
) +
coord_cartesian(clip = "off") +
theme_ridges(grid = FALSE)
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 100) +
labs(
x = "DBH [cm]",
y = "Species Code",
title = "FoRTE Mortality Comparison") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_cyclical(
breaks = c("kill", "live"),
labels = c(`Girdled` = "kill", `Living` = "live"),
values = c("#ff0000", "#0000ff", "#ff8080", "#8080ff"),
name = "Option", guide = "legend"
) +
coord_cartesian(clip = "off") +
theme_ridges(grid = FALSE)
# make ridge plot
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 80) +
labs(
x = "DBH [cm]",
y = "Species Code",
title = "FoRTE Mortality Comparison") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_cyclical(
# breaks = c("kill", "live"),
labels = c(`Girdled` = "kill", `Living` = "live"),
values = c("#ff0000", "#0000ff", "#ff8080", "#8080ff"),
name = "Option", guide = "legend"
) +
coord_cartesian(clip = "off") +
theme_ridges(grid = FALSE)
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 80) +
labs(
x = "DBH [cm]",
y = "Species Code",
title = "FoRTE Mortality Comparison") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_cyclical(
breaks = c("ACPE kill", "ACPE live"),
labels = c(`Girdled` = "kill", `Living` = "live"),
values = c("#ff0000", "#0000ff", "#ff8080", "#8080ff"),
name = "Option", guide = "legend"
) +
coord_cartesian(clip = "off") +
theme_ridges(grid = FALSE)
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 80) +
labs(
x = "DBH [cm]",
y = "Species Code",
title = "FoRTE Mortality Comparison") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_cyclical(
breaks = c("ACPE kill", "ACPE live"),
labels = c(`ACPE kill` = "Girdled", `ACPE live` = "Living"),
values = c("#ff0000", "#0000ff", "#ff8080", "#8080ff"),
name = "Option", guide = "legend"
) +
coord_cartesian(clip = "off") +
theme_ridges(grid = FALSE)
# make ridge plot
x11()
ggplot(mor, aes(y = as.factor(species)))+
geom_density_ridges(aes(x = dbh_cm, fill = paste(species, fate)),
alpha = .8, color = "white", from = 0, to = 80) +
labs(
x = "DBH [cm]",
y = "Species Code",
title = "FoRTE Mortality Comparison") +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0)) +
scale_fill_cyclical(
breaks = c("ACPE kill", "ACPE live"),
labels = c(`ACPE kill` = "Girdled", `ACPE live` = "Living"),
values = c("#ff0000", "#0000ff", "#ff8080", "#8080ff"),
name = "Assignment", guide = "legend"
) +
coord_cartesian(clip = "off") +
theme_ridges(grid = FALSE)
# making sense of landsat!
#
require(raster)
require(sf)
require(fs)
require(purrr)
require(tidyverse)
ras <- raster::raster("./data/costa_rica_modis_max_NDVI_wet_season_2020.tif")
x11()
plot(ras)
### bring in raster stack
ndvi <- raster::stack("rasterStack.tif")
x11()
raster::plot(ndvi)
# parrallelized code
cores <- 4
beginCluster(cores, type='SOCK')
ndvi.sd <- calc(ndvi, fun=sd)
endCluster()
# scale
ndvi.sd <- ndvi.sd * 0.0001
# plotting
x11()
raster::plot(ndvi.sd)
plot(res$geometry)
# importing the shapefiles
shp.files <- list.files("./data/areas_protegidas_ACG/", pattern = "*shp", full.names = TRUE)
ref.shp <- read_sf(shp.files[1])
# import them all
shapefile_list <- lapply(shp.files, read_sf)
dir_ls("./data/areas_protegidas_ACG/", glob = "*.shp") %>%
map(read_sf) %>%
do.call(rbind, .) -> bounds
res <- dir_ls("./data/areas_protegidas_ACG/", glob = "*.shp") %>%
tibble(fname = .) %>%
mutate(data = map(fname, read_sf)) %>%
unnest(data) %>%
st_as_sf() %>%
st_set_crs(crs(ndvi))
shapefile_list <- lapply(shp.files, read_sf)
#####
CRS("+init=epsg:4556")
#####
CRS("+init=epsg:4546")
#####
CRS("+init=epsg:102221")
#####
CRS("+init=epsg:5456")
CRS("+init=epsg:5390")
#####
CRS("+init=epsg:5456")
CRS(ndvi)
ndvi
shp.files <- list.files("./data/areas_protegidas_ACG/", pattern = "*shp", full.names = TRUE)
ref.shp <- read_sf(shp.files[1])
# import them all
shapefile_list <- lapply(shp.files, read_sf)
shapefile_list <- lapply(shp.files, st_set_crs,"+proj=lcc +datum=NAD27 +no_dfs +units=m +x_0=499800.0 +y_0=-885250.0" )
shapefile_list <- lapply(shp.files, crs,"+proj=lcc +datum=NAD27 +no_dfs +units=m +x_0=499800.0 +y_0=-885250.0" )
shapefile_list <- lapply(shapefile_list, function(x) {st_crs(x) <- "+proj=lcc +datum=NAD27 +no_dfs +units=m +x_0=499800.0 +y_0=-885250.0"; x})
CRS(shapefile_list[[1]])
CRS(shapefile_list
)
crs(shapefile_list[1])
crs(shapefile_list[[1]])
shapefile_list <- lapply(shapefile_list, crs, "+proj=lcc +datum=NAD27 +no_dfs +units=m +x_0=499800.0 +y_0=-885250.0")
# import them all
shapefile_list <- lapply(shp.files, read_sf, crs ="+proj=lcc +datum=NAD27 +no_dfs +units=m +x_0=499800.0 +y_0=-885250.0")
shapefile_list
# import them all
shapefile_list <- lapply(shp.files, st_read, crs ="+proj=lcc +datum=NAD27 +no_dfs +units=m +x_0=499800.0 +y_0=-885250.0")
# import them all
shapefile_list <- lapply(shp.files, st_read, crs ="+proj=lcc +datum=NAD27 +no_defs +units=m +x_0=499800.0 +y_0=-885250.0")
shapefile_list <- lapply(shapefile_list, crs, "+proj=lcc +datum=NAD27 +no_defs +units=m +x_0=499800.0 +y_0=-885250.0")
shapefile_list <-  lapply(shapefile+list, function(x) {st_crs(x) <- "+proj=lcc +datum=NAD27 +no_defs +units=m +x_0=499800.0 +y_0=-885250.0"; x})
shapefile_list <-  lapply(shapefile_list, function(x) {st_crs(x) <- "+proj=lcc +datum=NAD27 +no_defs +units=m +x_0=499800.0 +y_0=-885250.0"; x})
warnings()
shapefile_list <-  lapply(shapefile_list, function(x) {st_crs(x) <- "+proj=lcc +datum=NAD27 +no_defs +units=m"; x})
warnings()
shapefile_list <- lapply(shp.files, st_read, crs ="+proj=lcc +datum=NAD27 +no_defs +units=m +x_0=499800.0 +y_0=-885250.0")
# import them all
shapefile_list <- lapply(shp.files, st_read)
shapefile_list <-  lapply(shapefile_list, function(x) {st_crs(x) <- "+proj=lcc +datum=NAD27 +no_defs +units=m"; x})
CRS("+init=epsg:5456")
shapefile_list <-  lapply(shapefile_list, function(x) {st_crs(x) <- 5456; x})
crs(shapefile_list[[1]])
crs(ndvi.sd)
shapefile_list <-  lapply(shapefile_list, function(x) {spTransform(x) <- 9122; x})
require(sp)
shapefile_list <-  lapply(shapefile_list, function(x) {spTransform(x) <- 9122; x})
?spTransform
shapefile_list <-  lapply(shapefile_list, function(x) {rgdal::spTransform(x) <- 9122; x})
shapefile_list <-  lapply(shapefile_list, function(x) {sp::spTransform(x) <- 9122; x})
shapefile_list <-  lapply(shapefile_list, function(x) {rgdal:::spTransform(x) <- 9122; x})
require(rgdal)
?`spTransform,SpatialLines,CRS-method`
shapefile_list <-  lapply(shapefile_list, function(x) {spTransform(x) <- 9122; x})
library(maptools)
library(sp)
library(rgeos)
library(rgdal)
shapefile_list <-  lapply(shapefile_list, function(x) {spTransform(x) <- 9122; x})
shapefile_list <-  lapply(shapefile_list, spTransform, crs(9122))
shapefile_list <-  lapply(shapefile_list, sf::spTransform, crs(9122))
shapefile_list <-  lapply(shapefile_list, sp::spTransform, crs(9122))
shapefile_list <-  lapply(shapefile_list, rgdal:spTransform, crs(9122))
shapefile_list <-  lapply(shapefile_list, rgdal::spTransform, crs(9122))
shapefile_list <-  lapply(shapefile_list, rgdal::spTransform, CRS(9122))
shapefile_list <-  lapply(shapefile_list, spTransform, CRS(9122))
shapefile_list <-  lapply(shapefile_list, spTransform, CRS("+init=epsg:9122"))
spTransform(shapefile_list[[1]], CRS("+init=epsg:9122"))
crs(shapefile_list[[1]])
# making sense of landsat!
#
require(raster)
require(sf)
require(fs)
require(purrr)
require(tidyverse)
library(maptools)
library(sp)
library(rgeos)
library(rgdal)
shp.files <- list.files("./data/areas_protegidas_ACG/", pattern = "*shp", full.names = TRUE)
ref.shp <- read_sf(shp.files[1])
shapefile_list <- lapply(shp.files, st_read)
# shapefile_list <- lapply(shapefile_list, crs, "+proj=lcc +datum=NAD27 +no_defs +units=m +x_0=499800.0 +y_0=-885250.0")
shapefile_list <-  lapply(shapefile_list, function(x) {st_crs(x) <- 5456; x})
shapefile_list <-  lapply(shapefile_list, spTransform, CRS("+init=epsg:9122"))
?st_read
shp.files <- list.files("./data/areas_protegidas_ACG/", pattern = "*shp", full.names = TRUE)
ref.shp <- read_sf(shp.files[1])
# import them all
shapefile_list <- lapply(shp.files, readOGR)
ref.shp <- readOGR(shp.files[1])
crs(ref.shp)
# import them all
shapefile_list <- lapply(shp.files, read_sf)
# shapefile_list <- lapply(shapefile_list, crs, "+proj=lcc +datum=NAD27 +no_defs +units=m +x_0=499800.0 +y_0=-885250.0")
shapefile_list <-  lapply(shapefile_list, function(x) {st_crs(x) <- 5456; x})
shapefile_list <-  lapply(shapefile_list, spTransform, CRS("+init=epsg:9122"))
View(shapefile_list)
spTransform(ref.shp, CRS("+init=epsg:9122"))
# plotting
x11()
raster::plot(ndvi.sd)
ndvi <- raster::stack("rasterStack.tif")
# parrallelized code
cores <- 4
beginCluster(cores, type='SOCK')
ndvi.sd <- calc(ndvi, fun=sd)
endCluster()
# scale
ndvi.sd <- ndvi.sd * 0.0001
# plotting
x11()
raster::plot(ndvi.sd)
